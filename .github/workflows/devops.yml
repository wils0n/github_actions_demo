name: CI basico Python y Bash
run-name: CI disparado por ${{ github.actor }}

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    name: Test (Python)
    runs-on: ubuntu-latest

    # Declaramos outputs del job para que otros jobs los consuman
    outputs:
      build_tag: ${{ steps.meta.outputs.tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        shell: bash
        run: pytest -q

      - name: Compute build tag
        id: meta
        shell: bash
        run: |
          TS="$(date +%Y%m%d-%H%M%S)"
          echo "tag=${TS}-${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Save artifact (build info)
        shell: bash
        run: echo "Build tag: ${{ steps.meta.outputs.tag }}" > build-info.txt

      - name: Upload build info
        uses: actions/upload-artifact@v4
        with:
          name: build-info
          path: build-info.txt

  package:
    name: Package (ZIP)
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create zip
        shell: bash
        run: |
          mkdir -p dist
          cp hello.py dist/
          zip -r "dist/app-${{ needs.test.outputs.build_tag }}.zip" dist

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: app-zip
          path: dist/*.zip

  docs:
    name: Docs (echo paralelo)
    runs-on: ubuntu-latest
    steps:
      - name: Echo info
        shell: bash
        run: |
          echo "Repo: $GITHUB_REPOSITORY"
          echo "Evento: $GITHUB_EVENT_NAME"
          echo "Runner: $RUNNER_OS"
